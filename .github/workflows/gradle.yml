# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: ['main']

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID}}
  GCE_INSTANCE: intorest-vm
  GCE_INSTANCE_ZONE: asia-northeast3

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Create SA KEY file
        run: |
          touch ./server/src/main/resources/key.json
          cp ./*.json ./server/src/main/resources/key.json

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        working-directory: server
        run: chmod +x gradlew
      - name: Build
        working-directory: server
        run: ./gradlew build -x test
      - name: Move jar to root
        run: mv ./server/build/libs/*.jar ./server.jar

      - run: gcloud --quiet auth configure-docker

      - name: Build
        run: docker build --tag "intorest/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" .

      - name: Publish
        run: docker push "intorest/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"

      - name: Deploy
        run: |-
          gcloud compute instances update-container "$GCE_INSTANCE" \
            --zone "$GCE_INSTANCE_ZONE" \
            --container-image "intorest/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"
      # - name: Deploy GCP
      #   run: |
      #     gcloud run deploy intorest-vm --source ./server.jar \
      #       --region asia-northeast3 \
      #       --allow-unauthenticated \
      #       --max-instances 1 \
      #       --memory 512M
